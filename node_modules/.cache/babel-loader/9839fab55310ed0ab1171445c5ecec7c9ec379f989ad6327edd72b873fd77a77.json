{"ast":null,"code":"var _jsxFileName = \"E:\\\\_DOCUMENT\\\\Documents\\\\GitHub\\\\ProjetS4\\\\ProjetS4\\\\src\\\\components\\\\SectionSelector.js\";\nimport \"./SectionSelector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionSelector({\n  section,\n  onSelect,\n  onHover,\n  onLeave\n}) {\n  // Get classes based on selection state and section type\n  const getSectionClasses = () => {\n    let classes = \"section-selector \";\n    if (section.id === \"VIP\") {\n      classes += \"vip-section \";\n      if (section.selected) classes += \"selected\";\n    } else {\n      classes += \"regular-section \";\n      if (section.selected) classes += \"selected\";\n    }\n    return classes;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getSectionClasses(),\n    onMouseEnter: onHover,\n    onMouseLeave: onLeave,\n    onClick: onSelect,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-selector-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-selector-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `section-${section.id}`,\n          name: \"section\",\n          checked: section.selected,\n          onChange: () => {},\n          className: \"section-radio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: section.id === \"VIP\" ? \"VIP Zone\" : `Zone ${section.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-category\",\n            children: section.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-price-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-price-label\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-price\",\n          children: [\"\\u20AC\", section.basePrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-availability\",\n          children: [section.available, \" Available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = SectionSelector;\nexport default SectionSelector;\nvar _c;\n$RefreshReg$(_c, \"SectionSelector\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","SectionSelector","section","onSelect","onHover","onLeave","getSectionClasses","classes","id","selected","className","onMouseEnter","onMouseLeave","onClick","children","type","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","category","basePrice","available","_c","$RefreshReg$"],"sources":["E:/_DOCUMENT/Documents/GitHub/ProjetS4/ProjetS4/src/components/SectionSelector.js"],"sourcesContent":["import \"./SectionSelector.css\"\r\n\r\nfunction SectionSelector({ section, onSelect, onHover, onLeave }) {\r\n  // Get classes based on selection state and section type\r\n  const getSectionClasses = () => {\r\n    let classes = \"section-selector \"\r\n\r\n    if (section.id === \"VIP\") {\r\n      classes += \"vip-section \"\r\n      if (section.selected) classes += \"selected\"\r\n    } else {\r\n      classes += \"regular-section \"\r\n      if (section.selected) classes += \"selected\"\r\n    }\r\n\r\n    return classes\r\n  }\r\n\r\n  return (\r\n    <div className={getSectionClasses()} onMouseEnter={onHover} onMouseLeave={onLeave} onClick={onSelect}>\r\n      <div className=\"section-selector-content\">\r\n        <div className=\"section-selector-left\">\r\n          <input\r\n            type=\"radio\"\r\n            id={`section-${section.id}`}\r\n            name=\"section\"\r\n            checked={section.selected}\r\n            onChange={() => {}}\r\n            className=\"section-radio\"\r\n          />\r\n          <div className=\"section-info\">\r\n            <h3 className=\"section-title\">{section.id === \"VIP\" ? \"VIP Zone\" : `Zone ${section.name}`}</h3>\r\n            <p className=\"section-category\">{section.category}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"section-price-container\">\r\n          <div className=\"section-price-label\">Price</div>\r\n          <div className=\"section-price\">â‚¬{section.basePrice}</div>\r\n          <div className=\"section-availability\">{section.available} Available</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SectionSelector\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}