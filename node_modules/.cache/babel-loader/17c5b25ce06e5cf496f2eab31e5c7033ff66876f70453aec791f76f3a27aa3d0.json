{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghiles\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\SEMESTRES\\\\Projet S4\\\\dbprojectv2\\\\ProjetS4\\\\ps4v8\\\\ProjetS4\\\\src\\\\components\\\\AdminRoute.js\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  // Vérifier si l'utilisateur est connecté et a le rôle admin\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\";\n  const userRole = localStorage.getItem(\"userRole\");\n  const isAdmin = isLoggedIn && userRole === \"admin\";\n\n  // Si l'utilisateur n'est pas admin, rediriger vers la page de connexion\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Sinon, afficher le contenu protégé\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 32\n  }, this);\n};\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["Navigate","Outlet","jsxDEV","_jsxDEV","AdminRoute","children","isLoggedIn","localStorage","getItem","userRole","isAdmin","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ghiles/OneDrive/Документи/SEMESTRES/Projet S4/dbprojectv2/ProjetS4/ps4v8/ProjetS4/src/components/AdminRoute.js"],"sourcesContent":["import { Navigate, Outlet } from \"react-router-dom\"\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  // Vérifier si l'utilisateur est connecté et a le rôle admin\r\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\"\r\n  const userRole = localStorage.getItem(\"userRole\")\r\n  const isAdmin = isLoggedIn && userRole === \"admin\"\r\n\r\n  // Si l'utilisateur n'est pas admin, rediriger vers la page de connexion\r\n  if (!isAdmin) {\r\n    return <Navigate to=\"/login\" replace />\r\n  }\r\n\r\n  // Sinon, afficher le contenu protégé\r\n  return children ? children : <Outlet />\r\n}\r\n\r\nexport default AdminRoute\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,KAAK,MAAM;EAChE,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAME,OAAO,GAAGJ,UAAU,IAAIG,QAAQ,KAAK,OAAO;;EAElD;EACA,IAAI,CAACC,OAAO,EAAE;IACZ,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,OAAOX,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACF,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAAAC,EAAA,GAbKb,UAAU;AAehB,eAAeA,UAAU;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}