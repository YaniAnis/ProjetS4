{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"E:\\\\_DOCUMENT\\\\Documents\\\\GitHub\\\\ProjetS4\\\\ProjetS4\\\\src\\\\components\\\\CalendarNavigation.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport DayItem from \"./DayItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarNavigation({\n  currentMonth,\n  currentYear,\n  setCurrentMonth,\n  setCurrentYear,\n  selectedDate,\n  setSelectedDate,\n  matches\n}) {\n  _s();\n  const [daysInMonth, setDaysInMonth] = useState([]);\n\n  // Fonction pour obtenir le nom du mois\n  const getMonthName = month => {\n    const monthNames = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"];\n    return monthNames[month];\n  };\n\n  // Fonction pour obtenir le nombre de jours dans un mois\n  const getDaysInMonth = (year, month) => {\n    return new Date(year, month + 1, 0).getDate();\n  };\n  const getDaysInMonthFromMatches = matches => {\n    const days = new Set();\n    if (!matches || !Array.isArray(matches)) return [];\n    matches.forEach(match => {\n      if (!(match !== null && match !== void 0 && match.date)) return;\n      try {\n        const dateParts = match.date.split(\" \");\n        if (dateParts.length < 3) return;\n        const day = parseInt(dateParts[0]);\n        const monthStr = (dateParts[1] || \"\").toLowerCase();\n        const year = parseInt(dateParts[2]);\n\n        // Only add days for current month/year\n        if (monthStr && monthNames[monthStr] === currentMonth + 1 && year === currentYear) {\n          days.add(day);\n        }\n      } catch (e) {\n        console.error(\"Error parsing date:\", e);\n      }\n    });\n    return Array.from(days).sort((a, b) => a - b);\n  };\n  const getDaysWithMatches = () => {\n    const days = new Set();\n    if (!matches || !Array.isArray(matches)) return [];\n    matches.forEach(match => {\n      if (!(match !== null && match !== void 0 && match.date) || typeof match.date !== 'string') return;\n      try {\n        const dateParts = match.date.split(\" \");\n        if (dateParts.length < 3) return;\n        const day = parseInt(dateParts[0]);\n        const monthStr = (dateParts[1] || \"\").toLowerCase();\n        const year = parseInt(dateParts[2]);\n        if (isNaN(day) || !monthStr || isNaN(year)) return;\n        const monthNum = monthNames[monthStr];\n        if (!monthNum) return;\n        if (monthNum - 1 === currentMonth && year === currentYear) {\n          days.add(day);\n        }\n      } catch (err) {\n        console.error('Error parsing date:', err);\n      }\n    });\n    return Array.from(days).sort((a, b) => a - b);\n  };\n  const generateCalendarDays = () => {\n    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\n    const matchDays = getDaysWithMatches();\n    return Array.from({\n      length: daysInMonth\n    }, (_, i) => {\n      const dayNumber = i + 1;\n      const date = formatDate(dayNumber);\n      return {\n        number: dayNumber,\n        date: date,\n        hasMatch: matchDays.includes(dayNumber),\n        isSelected: date === selectedDate\n      };\n    });\n  };\n\n  // Générer les jours du mois actuel\n  useEffect(() => {\n    const days = [];\n    const daysCount = getDaysInMonth(currentYear, currentMonth);\n    const today = new Date();\n    const isCurrentMonth = today.getMonth() === currentMonth && today.getFullYear() === currentYear;\n    const currentDate = today.getDate();\n\n    // Ajouter \"Tous les jours\"\n    days.push({\n      date: \"all\",\n      name: \"Tous\",\n      number: \"les jours\",\n      isToday: false,\n      isOtherMonth: false,\n      hasMatches: false\n    });\n\n    // Ajouter les jours du mois\n    for (let i = 1; i <= daysCount; i++) {\n      const date = new Date(currentYear, currentMonth, i);\n      const dayOfWeek = date.getDay();\n      const dayNames = [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"];\n      const month = currentMonth + 1;\n      const formattedDate = `${currentYear}-${month < 10 ? \"0\" + month : month}-${i < 10 ? \"0\" + i : i}`;\n      days.push({\n        date: formattedDate,\n        name: dayNames[dayOfWeek],\n        number: i,\n        isToday: isCurrentMonth && i === currentDate,\n        isOtherMonth: false,\n        hasMatches: false\n      });\n    }\n\n    // Marquer les jours qui ont des matchs\n    if (matches.length > 0) {\n      const datesWithMatches = new Set();\n      matches.forEach(match => {\n        if (!(match !== null && match !== void 0 && match.date)) return;\n        const dateParts = (typeof match.date === \"string\" ? match.date : \"\").split(\" \");\n        if (!dateParts[1] || typeof dateParts[1] !== \"string\") return;\n        const day = Number.parseInt(dateParts[0]);\n        const monthNames = {\n          janvier: \"01\",\n          février: \"02\",\n          mars: \"03\",\n          avril: \"04\",\n          mai: \"05\",\n          juin: \"06\",\n          juillet: \"07\",\n          août: \"08\",\n          septembre: \"09\",\n          octobre: \"10\",\n          novembre: \"11\",\n          décembre: \"12\"\n        };\n\n        // Defensive: only call toLowerCase if dateParts[1] is a string\n        let monthKey = \"\";\n        try {\n          monthKey = dateParts[1].toLowerCase();\n        } catch {\n          monthKey = \"\";\n        }\n        const month = monthNames[monthKey];\n        const year = Number.parseInt(dateParts[2]);\n        if (!month || isNaN(day) || isNaN(year)) return;\n        const formattedDate = `${year}-${month}-${day < 10 ? \"0\" + day : day}`;\n        datesWithMatches.add(formattedDate);\n      });\n      days.forEach((day, index) => {\n        if (day.date !== \"all\" && datesWithMatches.has(day.date)) {\n          days[index].hasMatches = true;\n        }\n      });\n    }\n    setDaysInMonth(days);\n  }, [currentMonth, currentYear, matches]);\n\n  // Fonction pour naviguer vers le mois précédent\n  const goToPreviousMonth = () => {\n    setCurrentMonth(prev => {\n      if (prev === 0) {\n        setCurrentYear(year => year - 1); // Only decrement by 1\n        return 11;\n      }\n      return prev - 1;\n    });\n  };\n\n  // Fonction pour naviguer vers le mois suivant\n  const goToNextMonth = () => {\n    setCurrentMonth(prev => {\n      if (prev === 11) {\n        setCurrentYear(year => year + 1); // Only increment by 1\n        return 0;\n      }\n      return prev + 1;\n    });\n  };\n\n  // Fonction pour faire défiler les jours vers la gauche\n  const scrollDaysLeft = () => {\n    const daysSlider = document.getElementById(\"days-slider\");\n    if (daysSlider) {\n      daysSlider.scrollBy({\n        left: -300,\n        behavior: \"smooth\"\n      });\n    }\n  };\n\n  // Fonction pour faire défiler les jours vers la droite\n  const scrollDaysRight = () => {\n    const daysSlider = document.getElementById(\"days-slider\");\n    if (daysSlider) {\n      daysSlider.scrollBy({\n        left: 300,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"month-nav prev-month\",\n        id: \"prev-month\",\n        onClick: goToPreviousMonth,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"current-month\",\n        children: [getMonthName(currentMonth), \" \", currentYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"month-nav next-month\",\n        id: \"next-month\",\n        onClick: goToNextMonth,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-arrow nav-prev\",\n        id: \"prev-days\",\n        onClick: scrollDaysLeft,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"days-slider\",\n        id: \"days-slider\",\n        children: daysInMonth.map(day => /*#__PURE__*/_jsxDEV(DayItem, {\n          date: day.date,\n          name: day.name,\n          number: day.number,\n          isToday: day.isToday,\n          isOtherMonth: day.isOtherMonth,\n          hasMatches: day.hasMatches,\n          isActive: selectedDate === day.date,\n          onClick: () => setSelectedDate(day.date)\n        }, day.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-arrow nav-next\",\n        id: \"next-days\",\n        onClick: scrollDaysRight,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-chevron-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"days-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-dot has-matches-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Matchs disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"legend-dot today-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Aujourd'hui\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarNavigation, \"8ztdjU93OPCePntRJ13lkMgPS38=\");\n_c = CalendarNavigation;\nexport default CalendarNavigation;\nvar _c;\n$RefreshReg$(_c, \"CalendarNavigation\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","DayItem","jsxDEV","_jsxDEV","CalendarNavigation","currentMonth","currentYear","setCurrentMonth","setCurrentYear","selectedDate","setSelectedDate","matches","daysInMonth","setDaysInMonth","getMonthName","month","monthNames","getDaysInMonth","year","Date","getDate","getDaysInMonthFromMatches","days","Set","Array","isArray","forEach","match","date","dateParts","split","length","day","parseInt","monthStr","toLowerCase","add","e","console","error","from","sort","a","b","getDaysWithMatches","isNaN","monthNum","err","generateCalendarDays","firstDayOfMonth","getDay","matchDays","_","i","dayNumber","formatDate","number","hasMatch","includes","isSelected","daysCount","today","isCurrentMonth","getMonth","getFullYear","currentDate","push","name","isToday","isOtherMonth","hasMatches","dayOfWeek","dayNames","formattedDate","datesWithMatches","Number","janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre","monthKey","index","has","goToPreviousMonth","prev","goToNextMonth","scrollDaysLeft","daysSlider","document","getElementById","scrollBy","left","behavior","scrollDaysRight","className","children","id","onClick","fileName","lineNumber","columnNumber","map","isActive","_c","$RefreshReg$"],"sources":["E:/_DOCUMENT/Documents/GitHub/ProjetS4/ProjetS4/src/components/CalendarNavigation.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport DayItem from \"./DayItem\"\r\n\r\nfunction CalendarNavigation({\r\n  currentMonth,\r\n  currentYear,\r\n  setCurrentMonth,\r\n  setCurrentYear,\r\n  selectedDate,\r\n  setSelectedDate,\r\n  matches,\r\n}) {\r\n  const [daysInMonth, setDaysInMonth] = useState([])\r\n\r\n  // Fonction pour obtenir le nom du mois\r\n  const getMonthName = (month) => {\r\n    const monthNames = [\r\n      \"Janvier\",\r\n      \"Février\",\r\n      \"Mars\",\r\n      \"Avril\",\r\n      \"Mai\",\r\n      \"Juin\",\r\n      \"Juillet\",\r\n      \"Août\",\r\n      \"Septembre\",\r\n      \"Octobre\",\r\n      \"Novembre\",\r\n      \"Décembre\",\r\n    ]\r\n    return monthNames[month]\r\n  }\r\n\r\n  // Fonction pour obtenir le nombre de jours dans un mois\r\n  const getDaysInMonth = (year, month) => {\r\n    return new Date(year, month + 1, 0).getDate()\r\n  }\r\n\r\n  const getDaysInMonthFromMatches = (matches) => {\r\n    const days = new Set();\r\n    \r\n    if (!matches || !Array.isArray(matches)) return [];\r\n  \r\n    matches.forEach((match) => {\r\n      if (!match?.date) return;\r\n      \r\n      try {\r\n        const dateParts = match.date.split(\" \");\r\n        if (dateParts.length < 3) return;\r\n  \r\n        const day = parseInt(dateParts[0]);\r\n        const monthStr = (dateParts[1] || \"\").toLowerCase();\r\n        const year = parseInt(dateParts[2]);\r\n  \r\n        // Only add days for current month/year\r\n        if (monthStr && monthNames[monthStr] === currentMonth + 1 && year === currentYear) {\r\n          days.add(day);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error parsing date:\", e);\r\n      }\r\n    });\r\n  \r\n    return Array.from(days).sort((a, b) => a - b);\r\n  };\r\n\r\n  const getDaysWithMatches = () => {\r\n    const days = new Set();\r\n    \r\n    if (!matches || !Array.isArray(matches)) return [];\r\n  \r\n    matches.forEach(match => {\r\n      if (!match?.date || typeof match.date !== 'string') return;\r\n      \r\n      try {\r\n        const dateParts = match.date.split(\" \");\r\n        if (dateParts.length < 3) return;\r\n  \r\n        const day = parseInt(dateParts[0]);\r\n        const monthStr = (dateParts[1] || \"\").toLowerCase();\r\n        const year = parseInt(dateParts[2]);\r\n  \r\n        if (isNaN(day) || !monthStr || isNaN(year)) return;\r\n  \r\n        const monthNum = monthNames[monthStr];\r\n        if (!monthNum) return;\r\n  \r\n        if (monthNum - 1 === currentMonth && year === currentYear) {\r\n          days.add(day);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error parsing date:', err);\r\n      }\r\n    });\r\n  \r\n    return Array.from(days).sort((a, b) => a - b);\r\n  };\r\n\r\n  const generateCalendarDays = () => {\r\n    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\r\n    const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\r\n    const matchDays = getDaysWithMatches();\r\n  \r\n    return Array.from({ length: daysInMonth }, (_, i) => {\r\n      const dayNumber = i + 1;\r\n      const date = formatDate(dayNumber);\r\n      return {\r\n        number: dayNumber,\r\n        date: date,\r\n        hasMatch: matchDays.includes(dayNumber),\r\n        isSelected: date === selectedDate\r\n      };\r\n    });\r\n  };\r\n\r\n  // Générer les jours du mois actuel\r\n  useEffect(() => {\r\n    const days = []\r\n    const daysCount = getDaysInMonth(currentYear, currentMonth)\r\n    const today = new Date()\r\n    const isCurrentMonth = today.getMonth() === currentMonth && today.getFullYear() === currentYear\r\n    const currentDate = today.getDate()\r\n\r\n    // Ajouter \"Tous les jours\"\r\n    days.push({\r\n      date: \"all\",\r\n      name: \"Tous\",\r\n      number: \"les jours\",\r\n      isToday: false,\r\n      isOtherMonth: false,\r\n      hasMatches: false,\r\n    })\r\n\r\n    // Ajouter les jours du mois\r\n    for (let i = 1; i <= daysCount; i++) {\r\n      const date = new Date(currentYear, currentMonth, i)\r\n      const dayOfWeek = date.getDay()\r\n      const dayNames = [\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"]\r\n\r\n      const month = currentMonth + 1\r\n      const formattedDate = `${currentYear}-${month < 10 ? \"0\" + month : month}-${i < 10 ? \"0\" + i : i}`\r\n\r\n      days.push({\r\n        date: formattedDate,\r\n        name: dayNames[dayOfWeek],\r\n        number: i,\r\n        isToday: isCurrentMonth && i === currentDate,\r\n        isOtherMonth: false,\r\n        hasMatches: false,\r\n      })\r\n    }\r\n\r\n    // Marquer les jours qui ont des matchs\r\n    if (matches.length > 0) {\r\n      const datesWithMatches = new Set();\r\n\r\n      matches.forEach((match) => {\r\n        if (!match?.date) return;\r\n        const dateParts = (typeof match.date === \"string\" ? match.date : \"\").split(\" \");\r\n        if (!dateParts[1] || typeof dateParts[1] !== \"string\") return;\r\n\r\n        const day = Number.parseInt(dateParts[0]);\r\n\r\n        const monthNames = {\r\n          janvier: \"01\",\r\n          février: \"02\",\r\n          mars: \"03\",\r\n          avril: \"04\",\r\n          mai: \"05\",\r\n          juin: \"06\",\r\n          juillet: \"07\",\r\n          août: \"08\",\r\n          septembre: \"09\",\r\n          octobre: \"10\",\r\n          novembre: \"11\",\r\n          décembre: \"12\",\r\n        };\r\n\r\n        // Defensive: only call toLowerCase if dateParts[1] is a string\r\n        let monthKey = \"\";\r\n        try {\r\n          monthKey = dateParts[1].toLowerCase();\r\n        } catch {\r\n          monthKey = \"\";\r\n        }\r\n        const month = monthNames[monthKey];\r\n        const year = Number.parseInt(dateParts[2]);\r\n        if (!month || isNaN(day) || isNaN(year)) return;\r\n\r\n        const formattedDate = `${year}-${month}-${day < 10 ? \"0\" + day : day}`;\r\n        datesWithMatches.add(formattedDate);\r\n      });\r\n\r\n      days.forEach((day, index) => {\r\n        if (day.date !== \"all\" && datesWithMatches.has(day.date)) {\r\n          days[index].hasMatches = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    setDaysInMonth(days)\r\n  }, [currentMonth, currentYear, matches])\r\n\r\n  // Fonction pour naviguer vers le mois précédent\r\n  const goToPreviousMonth = () => {\r\n    setCurrentMonth((prev) => {\r\n      if (prev === 0) {\r\n        setCurrentYear((year) => year - 1); // Only decrement by 1\r\n        return 11\r\n      }\r\n      return prev - 1\r\n    })\r\n  }\r\n\r\n  // Fonction pour naviguer vers le mois suivant\r\n  const goToNextMonth = () => {\r\n    setCurrentMonth((prev) => {\r\n      if (prev === 11) {\r\n        setCurrentYear((year) => year + 1); // Only increment by 1\r\n        return 0\r\n      }\r\n      return prev + 1\r\n    })\r\n  }\r\n\r\n  // Fonction pour faire défiler les jours vers la gauche\r\n  const scrollDaysLeft = () => {\r\n    const daysSlider = document.getElementById(\"days-slider\")\r\n    if (daysSlider) {\r\n      daysSlider.scrollBy({ left: -300, behavior: \"smooth\" })\r\n    }\r\n  }\r\n\r\n  // Fonction pour faire défiler les jours vers la droite\r\n  const scrollDaysRight = () => {\r\n    const daysSlider = document.getElementById(\"days-slider\")\r\n    if (daysSlider) {\r\n      daysSlider.scrollBy({ left: 300, behavior: \"smooth\" })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-navigation\">\r\n      <div className=\"month-selector\">\r\n        <button className=\"month-nav prev-month\" id=\"prev-month\" onClick={goToPreviousMonth}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <h3 id=\"current-month\">\r\n          {getMonthName(currentMonth)} {currentYear}\r\n        </h3>\r\n        <button className=\"month-nav next-month\" id=\"next-month\" onClick={goToNextMonth}>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"days-navigation\">\r\n        <button className=\"nav-arrow nav-prev\" id=\"prev-days\" onClick={scrollDaysLeft}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <div className=\"days-slider\" id=\"days-slider\">\r\n          {daysInMonth.map((day) => (\r\n            <DayItem\r\n              key={day.date}\r\n              date={day.date}\r\n              name={day.name}\r\n              number={day.number}\r\n              isToday={day.isToday}\r\n              isOtherMonth={day.isOtherMonth}\r\n              hasMatches={day.hasMatches}\r\n              isActive={selectedDate === day.date}\r\n              onClick={() => setSelectedDate(day.date)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <button className=\"nav-arrow nav-next\" id=\"next-days\" onClick={scrollDaysRight}>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"days-legend\">\r\n        <div className=\"legend-item\">\r\n          <span className=\"legend-dot has-matches-dot\"></span>\r\n          <span>Matchs disponibles</span>\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <span className=\"legend-dot today-dot\"></span>\r\n          <span>Aujourd'hui</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarNavigation\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}