{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghiles\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\SEMESTRES\\\\Projet S4\\\\dbprojectv2\\\\ProjetS4\\\\ps4v8\\\\ProjetS4\\\\src\\\\components\\\\orders\\\\OrderDistribution.js\";\nimport \"./Order.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderDistribution = () => {\n  // Données fictives pour le graphique\n  const orderStatusData = [{\n    name: \"Pending\",\n    value: 30,\n    color: \"#FF6B6B\"\n  }, {\n    name: \"Processing\",\n    value: 45,\n    color: \"#4ECDC4\"\n  }, {\n    name: \"Shipped\",\n    value: 60,\n    color: \"#45B7D1\"\n  }, {\n    name: \"Delivered\",\n    value: 120,\n    color: \"#FED766\"\n  }];\n\n  // Calculer le total pour les pourcentages\n  const total = orderStatusData.reduce((sum, item) => sum + item.value, 0);\n\n  // Calculer les angles pour le graphique circulaire\n  let startAngle = 0;\n  const segments = orderStatusData.map(item => {\n    const percentage = item.value / total * 100;\n    const angle = percentage / 100 * 360;\n    const segment = {\n      ...item,\n      percentage,\n      startAngle,\n      endAngle: startAngle + angle\n    };\n    startAngle += angle;\n    return segment;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-distribution\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"order-distribution-title\",\n      children: \"Order Status Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          color: \"#f3f4f6\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\",\n            fontSize: \"18px\"\n          },\n          children: \"Distribution des statuts de commande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"200px\",\n            height: \"200px\",\n            position: \"relative\",\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"200\",\n            height: \"200\",\n            viewBox: \"0 0 100 100\",\n            children: [segments.map((segment, index) => {\n              // Convertir les angles en coordonnées pour l'arc SVG\n              const startAngleRad = (segment.startAngle - 90) * (Math.PI / 180);\n              const endAngleRad = (segment.endAngle - 90) * (Math.PI / 180);\n              const x1 = 50 + 40 * Math.cos(startAngleRad);\n              const y1 = 50 + 40 * Math.sin(startAngleRad);\n              const x2 = 50 + 40 * Math.cos(endAngleRad);\n              const y2 = 50 + 40 * Math.sin(endAngleRad);\n\n              // Déterminer si l'arc est grand (plus de 180 degrés)\n              const largeArcFlag = segment.endAngle - segment.startAngle > 180 ? 1 : 0;\n              return /*#__PURE__*/_jsxDEV(\"path\", {\n                d: `M 50 50 L ${x1} ${y1} A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2} Z`,\n                fill: segment.color\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"50\",\n              cy: \"50\",\n              r: \"20\",\n              fill: \"rgba(31, 41, 55, 0.8)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            gap: \"10px\",\n            width: \"100%\"\n          },\n          children: segments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"12px\",\n                height: \"12px\",\n                backgroundColor: segment.color,\n                marginRight: \"5px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"12px\"\n              },\n              children: [segment.name, \" (\", segment.percentage.toFixed(0), \"%)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = OrderDistribution;\nexport default OrderDistribution;\nvar _c;\n$RefreshReg$(_c, \"OrderDistribution\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","OrderDistribution","orderStatusData","name","value","color","total","reduce","sum","item","startAngle","segments","map","percentage","angle","segment","endAngle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","display","flexDirection","alignItems","justifyContent","marginBottom","fontSize","position","viewBox","index","startAngleRad","Math","PI","endAngleRad","x1","cos","y1","sin","x2","y2","largeArcFlag","d","fill","cx","cy","r","flexWrap","gap","marginRight","backgroundColor","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ghiles/OneDrive/Документи/SEMESTRES/Projet S4/dbprojectv2/ProjetS4/ps4v8/ProjetS4/src/components/orders/OrderDistribution.js"],"sourcesContent":["import \"./Order.css\"\r\n\r\nconst OrderDistribution = () => {\r\n  // Données fictives pour le graphique\r\n  const orderStatusData = [\r\n    { name: \"Pending\", value: 30, color: \"#FF6B6B\" },\r\n    { name: \"Processing\", value: 45, color: \"#4ECDC4\" },\r\n    { name: \"Shipped\", value: 60, color: \"#45B7D1\" },\r\n    { name: \"Delivered\", value: 120, color: \"#FED766\" },\r\n  ]\r\n\r\n  // Calculer le total pour les pourcentages\r\n  const total = orderStatusData.reduce((sum, item) => sum + item.value, 0)\r\n\r\n  // Calculer les angles pour le graphique circulaire\r\n  let startAngle = 0\r\n  const segments = orderStatusData.map((item) => {\r\n    const percentage = (item.value / total) * 100\r\n    const angle = (percentage / 100) * 360\r\n    const segment = {\r\n      ...item,\r\n      percentage,\r\n      startAngle,\r\n      endAngle: startAngle + angle,\r\n    }\r\n    startAngle += angle\r\n    return segment\r\n  })\r\n\r\n  return (\r\n    <div className=\"order-distribution\">\r\n      <h2 className=\"order-distribution-title\">Order Status Distribution</h2>\r\n      <div style={{ width: \"100%\", height: 300 }}>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"100%\",\r\n            color: \"#f3f4f6\",\r\n          }}\r\n        >\r\n          <div style={{ marginBottom: \"20px\", fontSize: \"18px\" }}>Distribution des statuts de commande</div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"200px\",\r\n              height: \"200px\",\r\n              position: \"relative\",\r\n              marginBottom: \"20px\",\r\n            }}\r\n          >\r\n            {/* Graphique circulaire SVG */}\r\n            <svg width=\"200\" height=\"200\" viewBox=\"0 0 100 100\">\r\n              {segments.map((segment, index) => {\r\n                // Convertir les angles en coordonnées pour l'arc SVG\r\n                const startAngleRad = (segment.startAngle - 90) * (Math.PI / 180)\r\n                const endAngleRad = (segment.endAngle - 90) * (Math.PI / 180)\r\n\r\n                const x1 = 50 + 40 * Math.cos(startAngleRad)\r\n                const y1 = 50 + 40 * Math.sin(startAngleRad)\r\n                const x2 = 50 + 40 * Math.cos(endAngleRad)\r\n                const y2 = 50 + 40 * Math.sin(endAngleRad)\r\n\r\n                // Déterminer si l'arc est grand (plus de 180 degrés)\r\n                const largeArcFlag = segment.endAngle - segment.startAngle > 180 ? 1 : 0\r\n\r\n                return (\r\n                  <path\r\n                    key={index}\r\n                    d={`M 50 50 L ${x1} ${y1} A 40 40 0 ${largeArcFlag} 1 ${x2} ${y2} Z`}\r\n                    fill={segment.color}\r\n                  />\r\n                )\r\n              })}\r\n              {/* Cercle central pour créer l'effet donut */}\r\n              <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"rgba(31, 41, 55, 0.8)\" />\r\n            </svg>\r\n          </div>\r\n\r\n          {/* Légende */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n              justifyContent: \"center\",\r\n              gap: \"10px\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {segments.map((segment, index) => (\r\n              <div\r\n                key={index}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginRight: \"15px\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"12px\",\r\n                    height: \"12px\",\r\n                    backgroundColor: segment.color,\r\n                    marginRight: \"5px\",\r\n                  }}\r\n                ></div>\r\n                <span style={{ fontSize: \"12px\" }}>\r\n                  {segment.name} ({segment.percentage.toFixed(0)}%)\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderDistribution\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}