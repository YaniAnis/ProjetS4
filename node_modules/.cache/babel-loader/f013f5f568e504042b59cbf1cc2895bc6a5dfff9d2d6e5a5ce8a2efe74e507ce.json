{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghiles\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\SEMESTRES\\\\Projet S4\\\\dbprojectv2\\\\ProjetS4\\\\ps4v8\\\\ProjetS4\\\\src\\\\components\\\\overview\\\\SalesOverviewChart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesOverviewChart = () => {\n  // Données pour le graphique\n  const salesData = [{\n    name: \"Jan\",\n    sales: 4200\n  }, {\n    name: \"Fév\",\n    sales: 3800\n  }, {\n    name: \"Mar\",\n    sales: 5100\n  }, {\n    name: \"Avr\",\n    sales: 4600\n  }, {\n    name: \"Mai\",\n    sales: 5400\n  }, {\n    name: \"Juin\",\n    sales: 7200\n  }, {\n    name: \"Juil\",\n    sales: 6100\n  }, {\n    name: \"Août\",\n    sales: 5900\n  }, {\n    name: \"Sep\",\n    sales: 6800\n  }, {\n    name: \"Oct\",\n    sales: 6300\n  }, {\n    name: \"Nov\",\n    sales: 7100\n  }, {\n    name: \"Déc\",\n    sales: 7500\n  }];\n\n  // Trouver la valeur maximale pour l'échelle\n  const maxSales = Math.max(...salesData.map(item => item.sales));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales-overview-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sales-overview-title\",\n      children: \"Aper\\xE7u des Ventes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sales-overview-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"static-line-chart\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"y-axis\",\n            children: [0, 1, 2, 3, 4].map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"y-label\",\n              children: Math.round(maxSales / 4 * (4 - index))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-area\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line-container\",\n              children: salesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-point\",\n                style: {\n                  left: `${index / (salesData.length - 1) * 100}%`,\n                  bottom: `${item.sales / maxSales * 100}%`\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"point-dot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this), index < salesData.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"line-segment\",\n                  style: {\n                    width: `${100 / (salesData.length - 1)}%`,\n                    transform: `rotate(${Math.atan2((salesData[index + 1].sales - item.sales) / maxSales * 100, 100 / (salesData.length - 1))}rad)`,\n                    transformOrigin: \"left center\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"x-axis\",\n            children: salesData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"x-label\",\n              style: {\n                left: `${index / (salesData.length - 1) * 100}%`\n              },\n              children: item.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = SalesOverviewChart;\nexport default SalesOverviewChart;\nvar _c;\n$RefreshReg$(_c, \"SalesOverviewChart\");","map":{"version":3,"names":["SalesOverviewChart","salesData","name","sales","maxSales","Math","max","map","item","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","round","style","left","length","bottom","width","transform","atan2","transformOrigin","_c","$RefreshReg$"],"sources":["C:/Users/ghiles/OneDrive/Документи/SEMESTRES/Projet S4/dbprojectv2/ProjetS4/ps4v8/ProjetS4/src/components/overview/SalesOverviewChart.js"],"sourcesContent":["const SalesOverviewChart = () => {\r\n  // Données pour le graphique\r\n  const salesData = [\r\n    { name: \"Jan\", sales: 4200 },\r\n    { name: \"Fév\", sales: 3800 },\r\n    { name: \"Mar\", sales: 5100 },\r\n    { name: \"Avr\", sales: 4600 },\r\n    { name: \"Mai\", sales: 5400 },\r\n    { name: \"Juin\", sales: 7200 },\r\n    { name: \"Juil\", sales: 6100 },\r\n    { name: \"Août\", sales: 5900 },\r\n    { name: \"Sep\", sales: 6800 },\r\n    { name: \"Oct\", sales: 6300 },\r\n    { name: \"Nov\", sales: 7100 },\r\n    { name: \"Déc\", sales: 7500 },\r\n  ]\r\n\r\n  // Trouver la valeur maximale pour l'échelle\r\n  const maxSales = Math.max(...salesData.map((item) => item.sales))\r\n\r\n  return (\r\n    <div className=\"sales-overview-chart\">\r\n      <h2 className=\"sales-overview-title\">Aperçu des Ventes</h2>\r\n      <div className=\"sales-overview-container\">\r\n        <div className=\"static-line-chart\">\r\n          <div className=\"chart-grid\">\r\n            {/* Axe Y */}\r\n            <div className=\"y-axis\">\r\n              {[0, 1, 2, 3, 4].map((index) => (\r\n                <div key={index} className=\"y-label\">\r\n                  {Math.round((maxSales / 4) * (4 - index))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Graphique */}\r\n            <div className=\"chart-area\">\r\n              <div className=\"line-container\">\r\n                {salesData.map((item, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"data-point\"\r\n                    style={{\r\n                      left: `${(index / (salesData.length - 1)) * 100}%`,\r\n                      bottom: `${(item.sales / maxSales) * 100}%`,\r\n                    }}\r\n                  >\r\n                    <div className=\"point-dot\"></div>\r\n                    {index < salesData.length - 1 && (\r\n                      <div\r\n                        className=\"line-segment\"\r\n                        style={{\r\n                          width: `${100 / (salesData.length - 1)}%`,\r\n                          transform: `rotate(${Math.atan2(\r\n                            ((salesData[index + 1].sales - item.sales) / maxSales) * 100,\r\n                            100 / (salesData.length - 1),\r\n                          )}rad)`,\r\n                          transformOrigin: \"left center\",\r\n                        }}\r\n                      ></div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Axe X */}\r\n            <div className=\"x-axis\">\r\n              {salesData.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"x-label\"\r\n                  style={{\r\n                    left: `${(index / (salesData.length - 1)) * 100}%`,\r\n                  }}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalesOverviewChart\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}