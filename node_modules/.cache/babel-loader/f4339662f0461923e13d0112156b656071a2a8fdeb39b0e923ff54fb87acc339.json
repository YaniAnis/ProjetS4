{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghiles\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438\\\\SEMESTRES\\\\Projet S4\\\\dbprojectv2\\\\ps4v5\\\\ProjetS4\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    // Try to load user from localStorage on refresh\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const result = await response.json();\n      if (response.ok && result.token) {\n        setUser(result.user);\n        localStorage.setItem('user', JSON.stringify(result.user));\n        localStorage.setItem('token', result.token);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: result.message || 'Login failed.'\n        };\n      }\n    } catch (err) {\n      return {\n        success: false,\n        message: 'Network error'\n      };\n    }\n  };\n  const register = async data => {\n    try {\n      const response = await fetch('http://localhost:8000/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        return {\n          success: true,\n          ...result\n        };\n      } else {\n        return {\n          success: false,\n          message: result.message || Object.values(result.errors || {}).join(' ')\n        };\n      }\n    } catch (err) {\n      return {\n        success: false,\n        message: 'Network error'\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6btsJNd3P1iTSl9tEhrwnHfwdEU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","result","json","ok","token","setItem","success","message","err","register","data","Object","values","errors","join","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/ghiles/OneDrive/Документи/SEMESTRES/Projet S4/dbprojectv2/ps4v5/ProjetS4/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    // Try to load user from localStorage on refresh\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok && result.token) {\r\n        setUser(result.user);\r\n        localStorage.setItem('user', JSON.stringify(result.user));\r\n        localStorage.setItem('token', result.token);\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, message: result.message || 'Login failed.' };\r\n      }\r\n    } catch (err) {\r\n      return { success: false, message: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const register = async (data) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        return { success: true, ...result };\r\n      } else {\r\n        return { success: false, message: result.message || Object.values(result.errors || {}).join(' ') };\r\n      }\r\n    } catch (err) {\r\n      return { success: false, message: 'Network error' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}